version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-doc-backend-prod
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=/app/data/documents.db
      - API_HOST=0.0.0.0
      - API_PORT=8001
      - LOG_LEVEL=warning
    env_file:
      - ./backend/.env
    volumes:
      - backend_data:/app/data
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    networks:
      - ai-doc-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-doc-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    networks:
      - ai-doc-network

  nginx:
    image: nginx:alpine
    container_name: ai-doc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - ai-doc-network

volumes:
  backend_data:
    driver: local

networks:
  ai-doc-network:
    driver: bridge